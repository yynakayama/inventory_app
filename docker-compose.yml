services:
  # MySQL データベース
  mysql:
    image: mysql:8.0
    container_name: inventory-mysql
    ports:
      - "${DB_PORT}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_CHARSET=utf8mb4
      - MYSQL_COLLATION=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    restart: unless-stopped
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --skip-character-set-client-handshake
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${DB_USER}", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 120s

  # phpMyAdmin (開発時のDB管理画面)
  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: inventory-phpmyadmin
    ports:
      - "8080:80"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - PMA_HOST=${DB_HOST}
      - PMA_PORT=${DB_PORT}
      - PMA_USER=${DB_USER}
      - PMA_PASSWORD=${DB_PASSWORD}
      - PMA_ARBITRARY=1
      - UPLOAD_LIMIT=1G
    restart: unless-stopped

  # Node.js + Express APIサーバー（バックエンド）
  app:
    build: .
    container_name: inventory-app
    ports:
      - "${PORT}:3000"
    depends_on:
      mysql:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    volumes:
      - .:/app
      - /app/node_modules
    working_dir: /app
    restart: unless-stopped

  # Next.js フロントエンドサーバー
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: inventory-frontend
    ports:
      - "3001:3001"
    depends_on:
      - app
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      # 起動速度向上のための環境変数
      - NEXT_TELEMETRY_DISABLED=${NEXT_TELEMETRY_DISABLED}
      - WATCHPACK_POLLING=${WATCHPACK_POLLING}
      - CHOKIDAR_USEPOLLING=${CHOKIDAR_USEPOLLING}
      - FAST_REFRESH=${FAST_REFRESH}
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
      # キャッシュボリュームを追加
      - next_cache:/app/.next/cache
    working_dir: /app
    restart: unless-stopped
    # ヘルスチェックを追加
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  mysql_data:
  next_cache: